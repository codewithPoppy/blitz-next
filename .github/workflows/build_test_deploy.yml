on:
  push:
    branches: [canary]
    tags: [v*]
  pull_request:
    types: [opened, synchronize]

name: Build, test, and deploy

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
    outputs:
      docsChange: ${{ steps.docs-change.outputs.DOCS_CHANGE }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 25

      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - run: yarn install --frozen-lockfile --check-files
      - run: node run-tests.js --timings --write-timings -g 1/1
      - name: Check docs only change
        run: echo ::set-output name=DOCS_CHANGE::$(node skip-docs-change.js echo 'not-docs-only-change')
        id: docs-change
      - run: echo ${{steps.docs-change.outputs.DOCS_CHANGE}}
      - uses: actions/cache@v2
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: yarn lint

  checkPrecompiled:
    name: Check Pre-compiled
    runs-on: ubuntu-latest
    needs: [build, build-native]
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: actions/download-artifact@v2
        with:
          name: next-swc-binaries
          path: packages/next/native
      - run: ./scripts/check-pre-compiled.sh
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testUnit:
    name: Test Unit
    runs-on: ubuntu-latest
    needs: build
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      HEADLESS: true
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: node run-tests.js --timings --type unit -g 1/1
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testIntegration:
    name: Test Integration
    runs-on: ubuntu-latest
    needs: build
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      HEADLESS: true
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5, 6]
    steps:
      - run: echo ${{needs.build.outputs.docsChange}}
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      # TODO: remove after we fix watchpack watching too much
      - run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: xvfb-run node run-tests.js --timings -g ${{ matrix.group }}/6 -c 3
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testElectron:
    name: Test Electron
    runs-on: ubuntu-latest
    needs: build
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      HEADLESS: true
      TEST_ELECTRON: 1
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      # TODO: remove after we fix watchpack watching too much
      - run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: cd test/integration/with-electron/app && yarn
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

      - run: xvfb-run node run-tests.js test/integration/with-electron/test/index.test.js
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testYarnPnP:
    runs-on: ubuntu-latest
    needs: build
    env:
      NODE_OPTIONS: '--unhandled-rejections=strict'
      YARN_COMPRESSION_LEVEL: '0'
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: bash ./scripts/test-pnp.sh
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testsPass:
    name: thank you, next
    runs-on: ubuntu-latest
    needs: [lint, checkPrecompiled, testIntegration, testUnit, testYarnPnP]
    steps:
      - run: exit 0

  testLegacyWebpack:
    name: Webpack 4 (Basic, Production, Acceptance)
    runs-on: ubuntu-latest
    needs: build
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
      HEADLESS: true
      NEXT_PRIVATE_TEST_WEBPACK4_MODE: 1

    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - run: xvfb-run node run-tests.js test/integration/{basic,fallback-modules,link-ref,production,async-modules,font-optimization,ssr-ctx}/test/index.test.js test/acceptance/*.test.js
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testFirefox:
    name: Test Firefox (production)
    runs-on: ubuntu-latest
    needs: build
    env:
      HEADLESS: true
      BROWSER_NAME: 'firefox'
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: node run-tests.js -c 1 test/integration/production/test/index.test.js
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testSafari:
    name: Test Safari (production)
    runs-on: ubuntu-latest
    needs: build
    env:
      BROWSERSTACK: true
      BROWSER_NAME: 'safari'
      NEXT_TELEMETRY_DISABLED: 1
      SKIP_LOCAL_SELENIUM_SERVER: true
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: '[[ -z "$BROWSERSTACK_ACCESS_KEY" ]] && echo "Skipping for PR" || node run-tests.js -c 1 test/integration/production/test/index.test.js'
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  testSafariOld:
    name: Test Safari 10.1 (nav)
    runs-on: ubuntu-latest
    needs: [build, testSafari]
    env:
      BROWSERSTACK: true
      LEGACY_SAFARI: true
      BROWSER_NAME: 'safari'
      NEXT_TELEMETRY_DISABLED: 1
      SKIP_LOCAL_SELENIUM_SERVER: true
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
    steps:
      - uses: actions/cache@v2
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: '[[ -z "$BROWSERSTACK_ACCESS_KEY" ]] && echo "Skipping for PR" || node run-tests.js -c 1 test/integration/production-nav/test/index.test.js'
        if: ${{needs.build.outputs.docsChange != 'docs only change'}}

  publishRelease:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    name: Potentially publish release
    runs-on: ubuntu-latest
    needs: [build, build-native]
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: actions/download-artifact@v2
        with:
          name: next-swc-binaries
          path: packages/next/native
      - run: ./scripts/prepublish-native.js
      - run: ./scripts/publish-release.sh

  releaseStats:
    name: Release Stats
    runs-on: ubuntu-latest
    needs: [publishRelease]
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: ./scripts/release-stats.sh
      - uses: ./.github/actions/next-stats-action
        env:
          PR_STATS_COMMENT_TOKEN: ${{ secrets.PR_STATS_COMMENT_TOKEN }}

  build-native:
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
        description: [default]
        include:
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
            description: m1

    name: next-swc - ${{ matrix.os }} - ${{ matrix.target }} - node@14
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          check-latest: true
      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2021-03-25
          target: ${{ matrix.target }}
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: stable-${{ matrix.os }}-node@14-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: stable-${{ matrix.os }}-node@14-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache native binary
        id: binary-cache
        uses: actions/cache@v2
        with:
          path: packages/next/native/**
          key: next-swc-nightly-2021-03-25-${{ matrix.target }}-${{ hashFiles('packages/next/build/swc/**') }}
      - name: 'Build'
        if: steps.binary-cache.outputs.cache-hit != true
        run: yarn build-native --target ${{ matrix.target }}
        env:
          MACOSX_DEPLOYMENT_TARGET: '10.13'
        working-directory: packages/next
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: next-swc-binaries
          path: packages/next/native/next-swc.*.node
      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache

  test-native:
    name: Unit Test Native Code
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-03-25
          profile: minimal
      - run: cd packages/next/build/swc && cargo test
